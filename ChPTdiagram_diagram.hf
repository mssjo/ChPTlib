#ifndef `CHPTDIAGRAMDIAGRAMHF'
#define CHPTDIAGRAMDIAGRAMHF

* Procedures related to building diagrams from vertices
* NOTE: this used to be a more extensive library, but has mostly been supplanted
*  by the more direct, efficient and less buggy diagram-building provided by
*  generated diagram files as opposed to handwritten ones

#include- ChPTdiagram_defs.hf

*************************************************************************************************

* Contract all internal flavor indices. Involves the following:
*  - Fierz identity
*  - misc. Lie algebra
*  - charge and mass matrix
*  - PKE mass propagator matrix handling
*  - NOT full-mass considerations
#procedure dotrace(EXPR)
    .sort
    skip; nskip `EXPR';

    #ifdef `SQED'
*         Apply the contraction-enforcing tensor
        repeat id SQED?{SQEDphi,SQEDdag}(?a) * SQED?(?b) = SQED(?a,?b);
        id SQED?{SQEDphi,SQEDdag}(?a, f1?, ?b, f1?, ?c) = 0;
        id SQED?{SQEDphi,SQEDdag}(?a) = 1;
    #endif

    id d_(f1?extflav,f2?extflav) = Tr(f1,f2);

    #ifdef `PKEMASS'
        id propmatrix(q?, f1?,f2?)
            = Tr(f1,f2) * Prop(q)
            + (Tr(f1,f2,8) + Tr(f2,f1,8)) * Prop8(q)
            + Tr(f1,8)*Tr(f2,8) * Prop88(q);
    #endif

    bracket Tr;
    .sort
    skip; nskip `EXPR';
    keep brackets;

    repeat;
        id Tr(?X, f1?!{3,8}) * Tr(?Y, f1?!{3,8})
            = Tr(?X,?Y) - 1/Nf * Tr(?X)*Tr(?Y);
        id Tr(?X, f1?!{3,8}, ?Y, f1?!{3,8})
            = Tr(?X)*Tr(?Y) - 1/Nf * Tr(?X,?Y);

        id Tr(f1?extflav) = 0;
        id Tr() = Nf;
    endrepeat;

    #ifdef `PKEMASS'
        .sort:>>dotrace `EXPR'<<;

        id Prop(?q) = (prop(?q, mp2) + 2*prop(?q, mk2))/3;
        id Prop8(?q) = (prop(?q, mp2) - prop(?q, mk2))*sqrt2*sqrt3/3;
        id Prop88(?q) = prop(?q, me2) + (prop(?q, mp2) - 4*prop(?q, mk2))/3;
    #endif

    bracket Tr;
    .sort:>>dotrace `EXPR'<<;
    skip; nskip `EXPR';
    keep brackets;

*     id Tr(i?, j?) = d_(i,j);

    #ifdef `PKEMASS'
*         repeat id Tr(chi, ?a) = (2*mhat + ms)/3 * Tr(?a) + 2*(mhat - ms)/sqrt6 * Tr(8, ?a);
        repeat id Tr(chi, ?a)
            = Tr(?a) * (m0p2 + 2*m0k2)/3
            + Tr(8, ?a) * 2*(m0p2 - m0k2)*sqrt2*sqrt3/3;

        repeat id Tr(8,8,?a) = Tr(?a)/3 - Tr(8,?a)/sqrt6;
        id Tr(f1?extflav) = 0;
        id Tr(8) = 0;
        id Tr() = 3;

    #else
        repeat id Tr(chi, ?a) = mp2 * Tr(?a);
        id Tr() = Nf;
    #endif


    #ifdef `SIMPLETRQ'
        .sort:>>dotrace `EXPR'<<;
        skip; nskip `EXPR';
        id Tr(Q) = 0;
        id Tr(Q,Q) = 1;
    #endif
    #ifndef `NFGENERAL'
        .sort:>>dotrace `EXPR'<<;
        skip; nskip `EXPR';
        #message[dotrace]~~~ fixing Nf=`NF'

        id Nf = `NF';
        id 1/Nf = 1/`NF';

*         NOTE: Lagrangian assumes Tr(Q) = 0, so 2-flavor values, while
*           techincally correct, are inconsistent.
        #ifndef `KEEPTRQ'
            #if `NF'==2
                id Tr(Q) = 1/3;
                id Tr(Q,Q) = 5/9;
            #elseif `NF'==3
                id Tr(Q) = 0;
                id Tr(Q,Q) = 2/3;
            #endif
        #endif

    #else
        #ifndef `KEEPTRQ'
            id Tr(Q) = 0;
            id Tr(Q,Q) = 1;
        #endif
    #endif

*     end of keep brackets
    .sort

    #call sqrt

    .sort:>>dotrace `EXPR'<<;

#endprocedure

#procedure checkprops
    #ifdef `CHECKPROPS'
        if(match(prop(?a)));
            print "NOTE: in `DIAGRAM': %t";
            #if (isdefined(CHPTDIAGRAMPY))&&(isdefined(REPLARG)==0)
                print "NOTE: REPLARG not defined, which might cause this";
            #endif
            exit "ERROR: failed to substitute all propagators";
        endif;
    #endif
#endprocedure

#endif
