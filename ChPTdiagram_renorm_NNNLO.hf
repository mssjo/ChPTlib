
* NNNLO renormalization
* Just a placeholder while awaiting the explicit gammas
* Splitting into constant and LEC-dependent parts like at NNLO will probably make sense

#procedure renormNNNLO(NAME,ID,GAMMA1,GAMMA2,GAMMA3)
    id `NAME'x`ID' = [(cmu)^(d-4)]^3/F^4 * (`NAME'r`ID'
        - (`GAMMA3') * Lambda^3
        - (`GAMMA2') * Lambda^2
        - (`GAMMA1') * Lambda
        );
#endprocedure

.sort
#ifdef `NFGENERAL'
    #do I=1,1862
        symbols Gam1x`I',Gam2x`I',Gam3x`I';
    #enddo
    #do I=1,1862
        #call renormNNNLO(K8,`I',Gam1x`I',Gam2x`I',Gam3x`I')
    #enddo
#elseif `NF'==3
    #do I=1,1254
        symbols Gam1x`I',Gam2x`I',Gam3x`I';
    #enddo
    #do I=1,1254
        #call renormNNNLO(C8,`I',Gam1x`I',Gam2x`I',Gam3x`I')
    #enddo
#elseif `NF'==2
    #do I=1,475
        symbols Gam1x`I',Gam2x`I',Gam3x`I';
    #enddo
    #do I=1,475
        #call renormNNNLO(c8,`I',Gam1x`I',Gam2x`I',Gam3x`I')
    #enddo
#endif
.sort:>>renorm NNNLO<<;
